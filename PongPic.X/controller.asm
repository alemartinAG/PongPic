#include "p16f887.inc"

; CONFIG1
; __config 0xEFF2
 __CONFIG _CONFIG1, _FOSC_HS & _WDTE_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOREN_ON & _IESO_ON & _FCMEN_ON & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF


CBLOCK	0x20
	NCOL
	NFIL
	AUX
	BOTON
	CounterA
	CounterB
	CounterC
ENDC
	
DATA_PIN    EQU    3 
LATCH_PIN   EQU    2
PULSE_PIN   EQU    1

ORG 0x00
GOTO INICIO
	
ORG 0x04

ORG 0x05
INICIO		
	    CALL    CONFIGURAR
MAIN_LOOP   CALL    GET_BOTON
	    CALL    CHECK_BOTON
	    CALL    DELAY
	    GOTO    MAIN_LOOP
	
	
GET_BOTON
	    BSF	   PORTA, 2
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    BCF	    PORTA, 2
LOOP_CHECK  BTFSS   PORTA, 3
	    INCF    BOTON, F	;si data = 0 se presiono un boton
	    BCF	    PORTA, 1
	    BCF	    STATUS, C
	    RLF	    BOTON, F	;lo muevo hacia la izq para distingui botones
	    NOP			;el boton A se pierde
	    NOP
	    NOP
	    NOP
	    BSF	    PORTA, 1
	    INCF    AUX, F
	    MOVLW   0x08	;chequeo que si lo hice 8 veces
	    SUBWF   AUX, W
	    BTFSS   STATUS, C
	    GOTO    LOOP_CHECK
	    CLRF    AUX
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    NOP
	    BCF	    PORTA, 1
	    RETURN
	
CHECK_BOTON
	    MOVF	BOTON, F
	    BTFSC	STATUS, Z
	    RETURN
	    BTFSC	BOTON, 4    ;chequeo el boton de arriba
	    GOTO	UP_PRESSED  
	    BTFSC	BOTON, 3    ;chequeo el boton de abajo
	    GOTO	DOWN_PRESSED
	    BTFSC	BOTON, 2
	    GOTO	LEFT_PRESSED
	    CLRF	PORTB
FIN_CB	    CLRF	BOTON
	    RETURN
UP_PRESSED  MOVLW	0x0F
	    MOVWF	PORTB
	    GOTO	FIN_CB
DOWN_PRESSED MOVLW	0xF0
	    MOVWF	PORTB
	    GOTO	FIN_CB
LEFT_PRESSED MOVLW	0xAA
	    MOVWF	PORTB
	    GOTO	FIN_CB
	   
	    ;CLRF	PORTB
	
CONFIGURAR
	BSF	STATUS, RP0
	BSF	STATUS, RP1
	CLRF	ANSELH
	CLRF	ANSEL
	BCF	STATUS, RP1
	CLRF	TRISB
	CLRF	TRISD
	CLRF	TRISA
	BSF	TRISA, 3
	;MOVLW	b'10000011'
	;MOVWF	OPTION_REG
	;BSF	INTCON, T0IE
	;BSF	INTCON, GIE
	BCF	STATUS, RP0
	;CALL	INIT_TIMER
	MOVLW	0x00
	MOVWF	PORTD
	MOVLW	0xFF
	MOVWF	PORTB
	RETURN
	
DELAY
	MOVLW	D'1'		; Genera un loop de 250.000 uS
	MOVWF	CounterC
LOOP2	MOVLW	D'28'
	MOVWF	CounterB
LOOP1	MOVLW	D'189'
	MOVWF	CounterA
LOOP    DECFSZ	CounterA,1
	GOTO	LOOP
	DECFSZ	CounterB,1
	GOTO	LOOP1
	DECFSZ	CounterC,1
	GOTO	LOOP2
	MOVLW	0xFF
	MOVWF	PORTB
	RETURN
	
	NOP
	END
	
	    
	    

